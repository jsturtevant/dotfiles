prefixesToDelete=("test" "kubetest" "capz-e2e" "kubernetes-" "win-template" "machinepool-win-template" "capz-conf" "gmsa-dc")

function rgclean() {
    echo "finding rgs for cleaning up"
    subid=$(az account show | jq -r .id)
    if [[ $subid != "" ]]; then
      echo "not valid sub for this command"
      exit 1
    fi

    groupsToDelete=()
    if [ -z "$1" ]; then
        for prefix in ${prefixesToDelete[@]}; do  
            groupsToDelete+=($(az group list -o json --query "[?starts_with(name, '$prefix') && tags.keep!='true'].name" -o tsv))
        done
    else
        # delete specific rg
        groupsToDelete+=$1
    fi

    echo ""
    # Iterate the loop to read and print each array element
    for value in "${groupsToDelete[@]}"
    do
        echo $value
    done
    echo ""
    echo -n "Delete the previous resource groups [y/n]:"
    read ans
    if [[ $ans != "y" ]]; then
        return
    fi

    for group in ${groupsToDelete[@]}; do  
        echo "Deleting $group"
        az group delete --name $group --yes --no-wait
    done 
}

function rglist(){
    groupsEligibleForDeletion=()
    for prefix in ${prefixesToDelete[@]}; do  
        echo checking for $prefix
        groupsEligibleForDeletion+=($(az group list -o json --query "[?starts_with(name, '$prefix')].name" -o tsv))
    done

    echo ""
    echo "Groups eligible for deletion:"
    for value in "${groupsEligibleForDeletion[@]}"
    do
        echo $value
    done
}

function rgkeep() {
    local rgname=$1
    az group update --name $rgname --tags keep=true
}

function rgrm() {
    local rgname=$1
    az group update --name $rgname --remove tags.keep
}

function newdev() {
    # https://github.com/aramase/kubernetes-dev-on-azure/blob/master/config-dev-machine.md
    local rnd=$RANDOM
    az group create --name devjjs-$rnd --location westus3
    az vm create --name jjs$rnd --resource-group devjjs-$rnd --public-ip-address-dns-name jjs$rnd \
        --image Canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2:latest --data-disk-sizes 1024 --size Standard_D8_v4 --ssh-key-value ./.ssh/id_rsa.pub 
}
